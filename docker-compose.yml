version: '3.4'

services:
  reservationmanager.api:
    image: ${DOCKER_REGISTRY-}reservationmanagerapi
    build:
      context: .
      dockerfile: ReservationManager.API/Dockerfile
    ports:
      - "7296:80"
      - "5174:443"
    depends_on:
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__ReservationManagerDb: "Host=postgres;Database=ReservationManager;Username=postgres;Password=RM123!"

  postgres:
    image: postgres:15.3
    container_name: ReservationManagerDb
    environment: 
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=ReservationManager"
      - "POSTGRES_PASSWORD=RM123!"
    ports:
        - 5432:5432
    expose:
        - '5432'
    volumes:
        - postgres-data:/PSG
          
  redis:
    image: redis:latest 
    container_name: ReservationManagerRedisCache
    ports:
      - 6379:6379
    expose:
      - '6379'
    restart: unless-stopped
    volumes:
      - redis-cache:/RSC
   
  loadtestrunner:
    image: reservationmanagerloadtestrunner
    build:
      context: .
      dockerfile: ReservationManager.LoadTestRunner/Dockerfile
    depends_on:
      - reservationmanager.api
    environment:
      API_BASE_URL: http://reservationmanager.api

volumes:
  postgres-data:
    name: reservation-manager-database
  redis-cache:
    name: reservation-manager-cache
