name: build and test

on:
  push:
    branches: [ main , develop ]

env:
  DOTNET_VERSION: '8.0.X'
  WORKING_FOLDER: './ReservationManager.Core.UnitTests'

jobs:
  # Job per la build e i test unitari
  build-and-test:
    name: Build and Unit Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        working-directory: ${{env.WORKING_FOLDER}}
        run: dotnet restore

      - name: Build
        working-directory: ${{env.WORKING_FOLDER}}
        run: dotnet build --configuration Release --no-restore

      - name: Test
        working-directory: ${{env.WORKING_FOLDER}}
        run: dotnet test --no-restore --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate coverage report
        run: |
          reportgenerator -reports:${{env.WORKING_FOLDER}}/coverage/**/coverage.cobertura.xml -targetdir:${{env.WORKING_FOLDER}}/coverage-report -reporttypes:Html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ${{env.WORKING_FOLDER}}/coverage-report

  mutation-testing:
    name: Mutation Testing
    runs-on: ubuntu-latest
    needs: build-and-test  # Dipende dal job build-and-test
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
  
      - name: Install Stryker.NET tool
        run: |
          dotnet tool install --global dotnet-stryker
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH # Aggiungi Stryker al PATH per poterlo eseguire
  
      - name: Run Mutation Tests
        run: stryker --configuration-file stryker-config.json --log-level info --reporters html
  
      - name: Upload mutation test report
        uses: actions/upload-artifact@v4
        with:
          name: mutation-report
          path: ${{env.WORKING_FOLDER}}/stryker-report


  # Job per il deploy (finto)
  fake-deploy:
    name: Fake Deploy
    runs-on: ubuntu-latest
    needs: mutation-testing  # Dipende dal job mutation-testing
    steps:
      - name: deploy
        run: printf "deployed"
